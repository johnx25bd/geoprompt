["SELECT \n    id, \n    names, \n    geometry \nFROM \n    omf_place \nWHERE \n    categories::json->>'primary' = 'park' \n    AND ST_DWithin(\n        geometry, \n        (SELECT geometry FROM omf_water WHERE names::json->>'primary' = 'Regent''s Canal' LIMIT 1), \n        2000\n    );", "SELECT \n    id, \n    geometry, \n    height, \n    num_floors\nFROM \n    omf_building\nWHERE \n    num_floors > 20\n    AND ST_DWithin(\n        geometry, \n        (\n            SELECT \n                geometry \n            FROM \n                omf_water \n            WHERE \n                names::json->>'primary' = 'River Fleet'\n            LIMIT 1\n        ), \n        500\n    );", "WITH basin_geometry AS (\n    SELECT geometry FROM omf_water WHERE names::json->>'primary' = 'Battlebridge Basin'\n)\nSELECT \n    id, \n    names, \n    geometry, \n    ST_Distance(geometry, (SELECT geometry FROM basin_geometry)) AS distance\nFROM \n    omf_place\nWHERE \n    categories::json->>'primary' = 'coffee_shop'\nORDER BY \n    distance\nLIMIT 10;", "/*\nList all places categorized as restaurants that intersect\nwith territorial extents categorized as parks.\n*/\n\nSELECT \n    r.id AS restaurant_id, \n    r.names AS restaurant_names, \n    r.geometry AS restaurant_geometry\nFROM \n    omf_place r\nJOIN\n    (\n        SELECT geometry\n        FROM omf_place\n        WHERE categories::json->>'primary' = 'park'\n    ) p\nON \n    ST_Intersects(r.geometry, p.geometry)\nWHERE \n    r.categories::json->>'primary' = 'restaurant';", "/* \n  This query identifies all water features that have at least one building within them \n  that exceeds a height of 50 meters.\n*/\n\nSELECT \n    w.id, \n    w.geometry, \n    w.names\nFROM \n    omf_water w\nWHERE \n    EXISTS (\n        SELECT 1\n        FROM omf_building b\n        WHERE \n            ST_Contains(w.geometry, b.geometry) \n            AND b.height > 50\n    );"]