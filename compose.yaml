services:
  api:
    build: ./api
    env_file:
      - .env
    # image: geoprompt-api
    # environment:
    #   - DATABASE_URL=postgres://mapper:password@postgis:5432/overture
    ports:
      - "8000:8000"
    depends_on:
      postgis:
        condition: service_healthy
    networks:
      - app_network


  front:
    build: ./front
    # image: geoprompt-front
    environment:
      - API_HOST=api
      - API_PORT=8000
    ports:
      - "8501:8501"
    depends_on:
      - api
    security_opt:
      - seccomp:unconfined
    networks:
      - app_network

  # nginx:
  #   build: ./nginx
  #   image: nginx:latest
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - api
  #     - front

  postgis:
    build: 
      context: ./postgis
      platforms:
        - linux/arm64
    ports:
      - "5432:5432"
    networks:
      - app_network
    environment:
      - POSTGRES_USER=mapper
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=overture
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg_omf_data:/var/lib/postgresql/data
      - ./postgis/data:/backup
    user: postgres
    command: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mapper", "-d", "overture"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pg_omf_data:

networks:
  app_network:
    driver: bridge
